$date
	Wed Jun 15 19:59:11 2022
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module testCore $end
$var wire 1 ! _WB_WrtEn $end
$var wire 32 " _WB_WrtData [31:0] $end
$var wire 5 # _WB_WrtAddr [4:0] $end
$var wire 1 $ _MEMWB_WrtEn $end
$var wire 32 % _MEMWB_WrtData [31:0] $end
$var wire 5 & _MEMWB_WrtAddr [4:0] $end
$var wire 32 ' _MEMWB_Data2 [31:0] $end
$var wire 32 ( _MEMWB_Data1 [31:0] $end
$var wire 5 ) _MEMWB_Addr2 [4:0] $end
$var wire 5 * _MEMWB_Addr1 [4:0] $end
$var wire 1 + _IDEXE_regWrite $end
$var wire 32 , _IDEXE_imm32 [31:0] $end
$var wire 32 - _IDEXE_Data2 [31:0] $end
$var wire 32 . _IDEXE_Data1 [31:0] $end
$var wire 5 / _IDEXE_Addr2 [4:0] $end
$var wire 5 0 _IDEXE_Addr1 [4:0] $end
$var wire 5 1 _IDEXE_ALUOp [4:0] $end
$var wire 1 2 _EXEMEM_WrtEn $end
$var wire 32 3 _EXEMEM_WrtData [31:0] $end
$var wire 5 4 _EXEMEM_WrtAddr [4:0] $end
$var wire 32 5 _EXEMEM_Data2 [31:0] $end
$var wire 32 6 _EXEMEM_Data1 [31:0] $end
$var wire 5 7 _EXEMEM_Addr2 [4:0] $end
$var wire 5 8 _EXEMEM_Addr1 [4:0] $end
$var wire 32 9 IFID_pcAddr [31:0] $end
$var wire 32 : IFID_instr [31:0] $end
$var reg 1 ; clk $end
$var reg 1 < reset $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
1<
0;
bx :
bx 9
b0 8
b0 7
b0 6
b0 5
b0 4
b0 3
02
bx 1
b0 0
b0 /
b0 .
b0 -
b0 ,
x+
b0 *
b0 )
b0 (
b0 '
b0 &
b0 %
0$
bx #
bx "
x!
$end
#5
b0 9
b0 :
b0 1
0+
0!
b0 #
b0 "
1;
#8
0<
#10
0;
#15
1;
#20
0;
#25
b10110010011 ,
b110010110010011 :
1;
#30
b1011 /
0;
#35
b11000010011 ,
b1 9
b100001110011000010011 :
1;
#40
b1010000000000000000100000000000 .
b1100 /
b1 0
0;
#45
b11010010011 ,
b10 9
b1000010110011010010011 :
1;
#50
b101000000000000000000000000100 .
b1101 /
b10 0
0;
#55
b11100010011 ,
b11 9
b1100011110011100010011 :
1;
#60
b10100000000000000000000000000 .
b1110 /
b11 0
0;
#65
b11110010011 ,
b100 9
b10000100110011110010011 :
1;
#70
b1010000000000000000000000000 .
b1111 /
b100 0
0;
#75
b100000010011 ,
b101 9
b10100101110100000010011 :
1;
#80
b101000000000000001000111000 .
b10000 /
b101 0
0;
#85
b100010010011 ,
b110 9
b11000110110100010010011 :
1;
#90
b1100000000110000000000000000000 .
b10001 /
b110 0
0;
#95
b100100010011 ,
b111 9
b11100111110100100010011 :
1;
#100
b110000000010000110000001110 .
b10010 /
b111 0
0;
#105
b100110010011 ,
b1000 9
b100001000110100110010011 :
1;
#110
b110000000000000000000000 .
b10011 /
b1000 0
0;
#115
b101000010011 ,
b1001 9
b100101001110101000010011 :
1;
#120
b1100001010000000 .
b10100 /
b1001 0
0;
#125
b101010010011 ,
b1010 9
b101001010110101010010011 :
1;
#130
b0 .
b10101 /
b1010 0
0;
#135
bx ,
b1011 9
bx :
1;
#140
bx -
bx .
bx /
bx 0
0;
#145
b1100 9
1;
#150
0;
#155
b1101 9
1;
#160
0;
#165
b1110 9
1;
#170
0;
#175
b1111 9
1;
#180
0;
#181
